
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/outputs.h>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>
  #include <dt-bindings/zmk/mouse.h>

  #define DEF_LAYER 0
  #define NUM_LAYER 1
  #define FUN_LAYER 2
  #define CUR_LAYER 3
  #define SYM_LAYER 4
  #define MOS_LAYER 5
  #define SYS_LAYER 6

  &sk {
    release-after-ms = <2000>;
    quick-release;
    /delete-property/ ignore-modifiers;
  };
  &caps_word {
    continue-list = <
            UNDERSCORE MINUS
            BACKSPACE DELETE
            N1 N2 N3 N4 N5 N6 N7 N8 N9 N0
    >;
  };
  / {
    behaviors {
      hm: homerow_mods {
              compatible = "zmk,behavior-hold-tap";
              #binding-cells = <2>;
              tapping-term-ms = <150>;
              quick-tap-ms = <0>;
              flavor = "tap-preferred";
              bindings = <&kp>, <&kp>;
          };
      cappy: capsword_and_capslock {
          compatible = "zmk,behavior-hold-tap";
          flavor = "tap-preferred";
          tapping-term-ms = <500>;
          #binding-cells = <2>;
          bindings = <&kp>, <&caps_word>;
      };

      bt_0: bt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_0>, <&bt BT_DISC 0>;
      };
      bt_1: bt_1 {
          compatible = "zmk,behavior-tap-dance";
          label = "BT_1";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&bt_select_1>, <&bt BT_DISC 1>;
      };
      bt_2: bt_2 {
          compatible = "zmk,behavior-tap-dance";
          label = "BT_2";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&bt_select_2>, <&bt BT_DISC 2>;
      };
      bt_3: bt_3 {
          compatible = "zmk,behavior-tap-dance";
          label = "BT_3";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&bt_select_3>, <&bt BT_DISC 3>;
      };
    };
    macros {
        bt_select_0: bt_select_0 {
            label = "BT_SELECT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
        bt_select_1: bt_select_1 {
            label = "BT_SELECT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
        bt_select_2: bt_select_2 {
            label = "BT_SELECT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
        bt_select_3: bt_select_3 {
            label = "BT_SELECT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };
  };
  / {
    keymap {
      compatible = "zmk,keymap";
      default_layer {
        // -----------------------------------------------------------------------------------------------------------------------------------------
        // | =          | 1     | 2    | 3    | 4   | 5   |                                                  | 6   | 7   | 8   | 9   | 0   | \     |
        // | ~          | B     | Y    | O    | U   | '   | ESC      |                            | ESC      | ;   | L   | D   | W   | V   | Z    |
        // | LCTRL      | C     | I    | E    | A   | ,   | LS(LALT) |                            | \        | .   | H   | T   | S   | N   | Q     |
        // | LSHFT      | G     | X    | J    | K   | -   | LtFN DEL | HOME      |  | PG_UP       | LtFN F12 | /   | R  | M   | F   | P   | RSHFT |
        // | LtNUM LEFT | RIGHT | LALT | LGUI | SPACE     | BSPC     | LtNAV END |  | LtNAV PG_DN | DEL      | ENTER     | [   | ]   | UP  | DOWN  |
                  bindings = <
          &kp EQUAL         &kp N1     &kp N2      &kp N3      &kp N4      &kp N5                                                                                           &kp N6    &kp N7      &kp N8      &kp N9   &kp N0    &kp BSLH
          &kp GRAVE         &kp B      &kp Y       &kp O       &kp U       &kp SQT    &kp ESC                                                         &kp ESC               &kp SEMI  &kp L       &kp D       &kp W    &kp V     &kp Z
          &cappy CAPSLOCK 0 &hm LGUI C &hm LALT I  &hm LCTRL E &hm LSHFT A &kp COMMA  &kp LS(LALT)                                                    &kp BSLH              &kp DOT   &hm RSHFT H &hm RCTRL T &kp S    &kp N     &kp Q
          &kp LSHFT         &kp G      &kp X       &kp J       &kp K       &kp MINUS  &lt CUR_LAYER ESC     &lt FUN_LAYER HOME  &lt FUN_LAYER PG_UP   &lt MOS_LAYER DEL     &kp FSLH  &kp R       &kp M       &kp F    &kp P     &sk RSHFT
          &lt LEFT          &kp RIGHT  &kp LALT    &kp LGUI                &kp TAB    &lt NUM_LAYER BSPC    &kp END             &lt SYS_LAYER PG_DN   &lt SYM_LAYER ENTER   &kp DEL               &kp LBKT    &kp RBKT &kp UP    &kp DOWN
        >;

        sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
      };


      num_layer {
        // -------------------------------------------------------------------------------------------------------------------------------
        // | none  | none | none  | none  | none  | none |                                  | none  | NUMLOCK | /   | *   | -     | none |
        // | trans | none | none  | none  | none  | none | trans |                  | trans | none  | 7       | 8   | 9   | +     | none |
        // | trans | none | none  | none  | none  | none | none  |                  | none  | none  | 4       | 5   | 6   | +     | none |
        // | trans | none | none  | none  | none  | none | trans | trans |  | trans | trans | none  | 1       | 2   | 3   | ENTER | none |
        // | trans | none | trans | trans | trans        | trans | trans |  | trans | trans | trans           | 0   | .   | ENTER | none |
                  bindings = <
        &none       &none       &kp D       &kp E       &kp F       &none                                                   &kp CARET   &kp HASH    &kp DLLR    &kp TILDE   &kp MINUS   &kp PIPE
        &caps_word  &kp X       &kp A       &kp B       &kp C       &kp UNDER   &trans                              &trans  &kp PRCNT   &kp N7      &kp N8      &kp N9      &kp PLUS    &kp K
        &kp KP_NUM  &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none       &none                               &none   &kp PLUS    &kp N4      &kp N5      &kp N6      &kp PLUS    &kp J
        &none       &sk LSHFT   &kp K_UNDO  &kp BSPC    &kp SPACE   &kp TAB     &trans    &tog NUM_LAYER    &trans  &trans  &kp STAR    &kp N1      &kp N2      &kp N3      &kp ENTER   &kp LS(G)
        &trans      &none       &kp K_REDO  &kp DEL                 &kp RET     &trans    &trans            &trans  &trans  &trans                  &kp N0      &kp DOT     &kp ENTER   &kp AT
        >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
      };

  function_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------
// | none  | F1   | F2    | F3    | F4    | F5         |                                  | F6         | F7     | F8     | F9      | F10  | F11  |
// | trans | none | {     | }     | none  | none       | trans |                  | trans | none       | BT_CLR | BT_PRV | BT_NXT  | none | F12  |
// | trans | none | (     | )     | none  | reset      | none  |                  | none  | reset      | none   | none   | none    | none | PLAY |
// | trans | none | [     | ]     | none  | bootloader | trans | trans |  | trans | trans | bootloader | none   | none   | none    | none | none |
// | trans | none | trans | trans | trans              | trans | trans |  | trans | trans | trans               | REWIND | FASTFWR | none | none |
          bindings = <
              &trans  &none  &none  &none   &none   &none                                                     &kp C_MEDIA_HOME  &kp C_PLAY    &kp C_PREV    &kp C_NEXT  &kp C_STOP    &kp C_EJECT
              &trans  &none  &none  &none   &none   &none           &sys_reset                  &sys_reset    &kp K_WWW         &kp F7        &kp F8        &kp F9      &kp F10       &kp F13
              &trans  &none  &none  &none   &none   &trans          &bootloader                 &bootloader   &kp K_CALC        &kp F4        &kp F5        &kp F6      &kp F11       &kp F14
              &trans  &none  &none  &none   &none   &trans          &trans   &trans    &trans   &trans        &kp C_AL_FILES    &kp F1        &kp F2        &kp F3      &kp F12       &kp F15
              &trans  &none  &trans &trans          &tog FUN_LAYER  &trans   &trans    &trans   &trans        &tog FUN_LAYER                  &kp C_RW      &kp C_FF    &none         &none
          >;

          sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

      cursor_layer {
        bindings = <
          &none  &none      &none       &none       &kp DEL     &kp INS                                        &kp INS     &kp DEL  &none       &none       &none       &none
          &none  &sk LSHFT  &kp K_REDO  &kp K_UNDO  &kp BSPC    &kp K_CUT       &none                   &none  &kp K_CUT   &kp BSPC &kp K_UNDO  &kp K_REDO  &sk LSHFT   &none
          &none  &kp LGUI   &kp LALT    &kp LCTRL   &kp LSHFT   &kp K_COPY      &none                   &none  &kp K_COPY  &kp LEFT &kp UP      &kp DOWN    &kp RIGHT   &none
          &none  &none      &none       &none       &none       &kp K_PASTE     &kp TAB   &none  &none  &none  &kp K_PASTE &kp HOME &kp PG_UP   &kp PG_DN   &kp END     &none
          &none  &none      &none       &none                   &tog CRS_LAYER  &none     &none  &none  &none  &tog CRS_LAYER       &kp K_FIND  &none       &none       &none
        >;
        sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
      };



    symbol_layer {
       bindings = <
          &none     &kp GRAVE &kp LPAR   &kp RPAR   &kp SEMI  &kp COMMA                                         &none   &none      &none        &none     &none     &none
          &kp EXCL  &kp LBRC  &kp SQT    &kp DQT    &kp RBRC  &kp QMARK  &kp COLON                      &none   &trans  &kp RSHFT  &kp RCTRL    &kp RALT  &kp RGUI  &none
          &kp HASH  &kp CARET &kp EQUAL  &kp UNDER  &kp DLLR  &kp STAR   &kp SEMI                       &none   &trans  &kp BSPC   &kp TAB      &kp SPACE &kp RET   &none
          &kp TILDE &kp LT    &kp PIPE   &kp MINUS  &kp GT    &kp FSLH   &kp BSLH    &kp DOT    &none   &none   &trans  &kp DEL    &kp LS(TAB)  &none     &none     &none
          &kp AT    &kp AMPS  &kp LBKT   &kp RBKT             &kp PLUS   &kp PRCNT   &kp STAR   &none   &none   &tog SYM_LAYER     &trans       &none     &none     &none
      >;

      sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
    };

    // wait for mouse support
     mouse_layer {
        bindings = <
          &none     &kp GRAVE &kp LPAR   &kp RPAR   &kp SEMI  &kp COMMA                                        &none      &none      &none        &none     &none     &none
          &kp EXCL  &kp LBRC  &kp SQT    &kp DQT    &kp RBRC  &kp QMARK  &kp COLON                     &trans  &none      &kp RSHFT  &kp RCTRL    &kp RALT  &kp RGUI  &none
          &kp HASH  &kp CARET &kp EQUAL  &kp UNDER  &kp DLLR  &kp STAR   &kp SEMI                      &trans  &none      &kp BSPC   &kp TAB      &kp SPACE &kp RET   &none
          &kp TILDE &kp LT    &kp PIPE   &kp MINUS  &kp GT    &kp FSLH   &kp BSLH    &kp DOT    &none  &trans  &none      &kp DEL    &kp LS(TAB)  &none     &none     &none
          &kp AT    &kp AMPS  &kp LBKT   &kp RBKT             &kp PLUS   &kp PRCNT   &kp STAR   &none  &tog MOS_LAYER                &trans       &none     &none     &none
        >;
        sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
      };

     system_layer {
        bindings = <
          &bt BT_CLR  &none      &none       &none &none  &none                                 &none  &none     &none      &none     &none      &none
          &none       &kp C_PWR  &kp C_SLEEP &none &none  &none    &none                &none   &none  &none     &none      &none     &none      &none
          &none       &kp K_PWR  &kp K_SLEEP &none &none  &none    &none                &none   &none  &kp RSHFT &kp RCTRL  &kp RALT  &kp RGUI   &none
          &none       &bt_0      &bt_1       &bt_2 &bt_3  &none    &none  &none  &none  &none   &none  &none     &none      &none     &none      &none
          &none       &none      &none       &none        &none    &none  &none  &none  &none   &tog SYM_LAYER   &none      &none     &none      &none
        >;
        sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
      };
    };
  };
